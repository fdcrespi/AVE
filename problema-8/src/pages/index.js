import { Button, Card, CardContent, CardMedia, TextField, Typography } from '@mui/material';
import { Box } from '@mui/system';
import Head from 'next/head'
import Image from 'next/image';
import { useState } from 'react'

export default function Home() {

  const [images, setImages] = useState([]);
  const [limit, setLimit] = useState([]);
  const accessToken = useState('yLDYdf6bH4qJbWywp298igTt0o5rwXafwUWGUhEbeM5vXkrCSqni961v');

  const handleSubmit = async (e) => {
    e.preventDefault();
    const res = await fetch('https://rickandmortyapi.com/api/character')
    const data = await res.json();
    setImages(data.results.slice(0, limit));
    console.log(data);
  }
   
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Typography variant="h2" component="h2" gutterBottom sx={{textAlign: 'center'}}>
          Image Gallery
        </Typography>
        <Box sx={{
          display: 'flex',
          justifyContent: 'center',
          alignItems: 'center',
          gap: '1rem',
          flexWrap: 'wrap',
        }}>
        <Box 
            component="form"
            sx={{
              '& > :not(style)': { m: 1, width: '25ch' },
              display: 'inline-flex',
              justifyContent: 'center',
              alignItems: 'center',
            }}
            noValidate
            autoComplete="off"
            onSubmit={handleSubmit}
          >
            <TextField 
              type="number" 
              variant="standard" 
              label="cantidad" 
              onChange={(e) => {
                if (e.target.value > 20) {
                  alert('El limite es 20');
                  e.target.value = 20;
                  setLimit(20);
                  return;
                }
                setLimit(e.target.value)
              }} 
              minValue={0}
              defaultValue={0}
              maxValue={20}
            />
            <Button type="submit" variant="contained">Search</Button>
          </Box>
        </Box>
        <Box sx={{ 
          display: 'flex',
          flexWrap: 'wrap',
          justifyContent: 'center',
          alignItems: 'center',
          gap: '1rem',

        }}>
          {
            images &&
            images.map(image => (
              <Image src={image.image} alt={image.name} width={150} height={150} />
            ))
          }
        </Box>
      </main>
    </>
  )
}