import Head from 'next/head'
import { Box, FormControl, Icon, List, ListItem, ListItemText, TextField } from '@mui/material'
import { useState } from 'react';
import {tieneMayusculasYMinusculas, tieneDosLetrasConsecutivasIguales, tieneCuatroNumeros, tieneDosNumerosConsecutivosIguales, tieneDosCaracteresEspeciales, tieneEspaciosEnBlanco, tieneCero} from '@/utils/checkPass';
import CloseIcon from '@mui/icons-material/Close';
import CheckIcon from '@mui/icons-material/Check';

const passwordRules = [
  {
    id: 1,
    text: 'Tiene al menos 16 caracteres',
    isValid: false
  },
  {
    id: 2,
    text: 'Tiene mayúsculas y minúsculas',
    isValid: false
  },
  {
    id: 3,
    text: 'No tiene dos letras iguales consecutivas',
    isValid: false
  },
  {
    id: 4,
    text: 'Tiene al menos 4 números',
    isValid: false
  },
  {
    id: 5,
    text: 'No tiene dos números iguales consecutivos',
    isValid: false
  },
  {
    id: 6,
    text: 'Tiene al menos 2 caracteres especiales no consecutivos',
    isValid: false
  },
  {
    id: 7,
    text: 'No tiene espacios en blanco',
    isValid: false
  },
  {
    id: 8,
    text: 'No tiene el 0',
    isValid: false
  }
];

export default function Home() {

  const [isValid, setIsValid] = useState(false);
  const [password, setPassword] = useState('');

  const handlePasswordChange = (event) => {
    const password = event.target.value;
    setPassword(password);
    passwordRules[0].isValid = password.length >= 16;
    passwordRules[1].isValid = tieneMayusculasYMinusculas(password);
    passwordRules[2].isValid = !tieneDosLetrasConsecutivasIguales(password);
    passwordRules[3].isValid = tieneCuatroNumeros(password);
    passwordRules[4].isValid = !tieneDosNumerosConsecutivosIguales(password);
    passwordRules[5].isValid = tieneDosCaracteresEspeciales(password);
    passwordRules[6].isValid = !tieneEspaciosEnBlanco(password);
    passwordRules[7].isValid = !tieneCero(password);
    setIsValid(
      passwordRules[0].isValid &&
      passwordRules[1].isValid &&
      passwordRules[2].isValid &&
      passwordRules[3].isValid &&
      passwordRules[4].isValid &&
      passwordRules[5].isValid &&
      passwordRules[6].isValid &&
      passwordRules[7].isValid
    );
  }

  return (
    <>
      <Head>
        <title>Check Password</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Box sx={{
          display: 'flex',
          flexDirection: 'column',
          alignItems: 'center',
          justifyContent: 'center',
          height: '100vh',
          backgroundColor: 'light'
        }}>
          <FormControl>
            <Box sx={{ display: 'flex', flexDirection: 'column' }}>
              <TextField id="password" name="password" label="Password" autoComplete="current-password" onChange={handlePasswordChange} color={isValid ? 'success' : 'error'} focused/>
            </Box>
          </FormControl>
        
          <List dense={true}>
            {
             passwordRules.map((rule) => {
                
                return (
                  <Box sx={{display: 'flex', flexDirection: 'row', justifyContent: 'center', alignItems: 'center'}}>
                    { rule.isValid? <CheckIcon sx={{color: 'green'}} /> : <CloseIcon sx={{color: 'red'}}/>}
                    <ListItem key={rule.id}>
                      <ListItemText primary={rule.text} sx={{color: rule.isValid ? 'green' : 'red'}}/>
                    </ListItem>
                  </Box>
                )
              }
              )
            }
          </List>
        </Box>
    
      </main>
    </>
  )
}
