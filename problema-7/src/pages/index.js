import Head from 'next/head'
import { Typography, Box, List, ListItem, IconButton, TextField, Select, MenuItem, FormControl, InputLabel, Button } from '@mui/material'
import { ListItemAvatar, Avatar, ListItemText } from '@mui/material'
import FolderIcon from '@mui/icons-material/Folder'
import DeleteIcon from '@mui/icons-material/Delete'
import TaskIcon from '@mui/icons-material/Task';
import AddTaskIcon from '@mui/icons-material/AddTask';
import { useState } from 'react'

let todoList = [
  { 
    id: 1, 
    nombre: 'Tarea 1',
    fecha: '01-08-2023',
    prioridad: 'alta',
    descripcion: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl quis ultrices ultricies, nunc nunc ultrices nunc, quis aliquam nu',
  },
  {
    id: 2,
    nombre: 'Tarea 2',
    fecha: '18-08-2023',
    prioridad: 'media',
    descripcion: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl quis ultrices ultricies, nunc nunc ultrices nunc, quis aliquam nu',
  },
  {
    id: 3,
    nombre: 'Tarea 3',
    fecha: '14-09-2023',
    prioridad: 'baja',
    descripcion: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl quis ultrices ultricies, nunc nunc ultrices nunc, quis aliquam nu',
  },
]

export default function Home() {

 
  const [name, setName] = useState('')
  const [date, setDate] = useState('')
  const [priority, setPriority] = useState('')
  const [description, setDescription] = useState('')
  const [todos, setTodos] = useState(todoList)

  const handleSubmit = (e) => {
    e.preventDefault()
    const newTodo = {
      id: todos.length + 1,
      nombre: name,
      fecha: date,
      prioridad: priority,
      descripcion: description,
    }
    setTodos([...todos, newTodo])
    setName('')
    setDate('')
    setPriority('')
    setDescription('')
  }

  const handleDelete = (id) => () => {
    const newTodos = todos.filter((todo) => todo.id !== id)
    setTodos(newTodos)
  }

  return (
    <>
      <Head>
        <title>Tareas</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Box sx={{
            display: 'flex',
            flexDirection: 'column',
            alignItems: 'center',
            justifyContent: 'center',
          }}
          onSubmit={handleSubmit}
        >
          <Typography variant="h4" component="h1" gutterBottom>
            Listado de tareas
          </Typography>
          <Box 
            component="form"
            sx={{
              display: 'flex',
              flexDirection: 'column',
              alignItems: 'start',
              justifyContent: 'center',
              width: '100%',
            
            }}
          >
            <Typography variant="h6" component="h2" gutterBottom>
              Nueva Tarea
            </Typography>
            <Box sx={{
              display: 'flex',
              flexDirection: 'row',
              alignItems: 'center',
              justifyContent: 'center',
              width: '100%',
            }}>  
              <TextField
                id="name"
                label="Nombre"
                variant="outlined"
                fullWidth
                required
                size="small"
                value={name}
                onChange={(e) => setName(e.target.value)}
              />
              <TextField
                id="date"
             
                type="date"
                variant="outlined"
                fullWidth
                required
                size="small"
                sx={{
                  marginLeft: '10px',
                }}
                value={date}
                onChange={(e) => setDate(e.target.value)}
              />
              <FormControl variant="outlined" fullWidth size="small" sx={{ml: 2}}>
                <InputLabel id="priority">Prioridad</InputLabel>

                <Select 
                  variant="outlined"
                  fullWidth
                  required
                  size="small"
                  label="Prioridad"
                  value={priority}
                  onChange={(e) => setPriority(e.target.value)}
                >
                  <MenuItem value="alta">Alta</MenuItem>
                  <MenuItem value="media">Media</MenuItem>
                  <MenuItem value="baja">Baja</MenuItem>
                </Select>
               
              </FormControl>
              <TextField
                id="description"
                label="DescripciÃ³n"
                multiline
                rows={4}
                variant="outlined"
                fullWidth
                required
                size="small"
                sx={{
                  marginLeft: '10px',
                }}
                value={description}
                onChange={(e) => setDescription(e.target.value)}
              />

              <IconButton type="submit" edge="end" aria-label="delete" sx={{color: 'green', marginLeft: '10px', marginRight: '10px'}}>
                <AddTaskIcon />
              </IconButton>
            </Box>
          </Box>

          <Button variant="contained" sx={{marginTop: '20px'}} onClick={() => setTodos([])}>Borrar tareas</Button>
            
          <Box sx={{
            display: 'flex',
            flexDirection: 'column',
            alignItems: 'start',
            justifyContent: 'center',
          }}>
            <List dense={true}>
              {todos.map((todo) =>
                <ListItem
                  key={todo.id}
                  secondaryAction={
                    <IconButton edge="end" aria-label="delete" sx={{color: 'red'}} onClick={handleDelete(todo.id)}>
                      <DeleteIcon />
                    </IconButton>
                  }
                >
                  <ListItemAvatar>
                    <Avatar>
                      <TaskIcon />
                    </Avatar>
                  </ListItemAvatar>
                  <ListItemText
                    primary={todo.nombre + ' - ' + todo.fecha + ' - ' + todo.prioridad}
                    secondary={todo.descripcion}
                  />
                </ListItem>,
              )}
            </List>
          </Box>
        </Box>
      </main>
    </>
  )
}
